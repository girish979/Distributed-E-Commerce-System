version: '3'
services:
  cockroachdb1:
    image: cockroachdb/cockroach:v21.1.6
    command: start --insecure --join=cockroachdb1,cockroachdb2,cockroachdb3
    ports:
      - "26257:26257"
      - "8080:8080"
    volumes:
      - ./cockroach-data1:/cockroach/cockroach-data
    networks:
      - cockroachnet
    platform: linux/amd64

  cockroachdb2:
    image: cockroachdb/cockroach:v21.1.6
    command: start --insecure --join=cockroachdb1,cockroachdb2,cockroachdb3
    ports:
      - "26258:26257"
      - "8081:8080"
    volumes:
      - ./cockroach-data2:/cockroach/cockroach-data
    networks:
      - cockroachnet
    platform: linux/amd64

  cockroachdb3:
    image: cockroachdb/cockroach:v21.1.6
    command: start --insecure --join=cockroachdb1,cockroachdb2,cockroachdb3
    ports:
      - "26259:26257"
      - "8082:8080"
    volumes:
      - ./cockroach-data3:/cockroach/cockroach-data
    networks:
      - cockroachnet
    platform: linux/amd64

  init:
    image: cockroachdb/cockroach:v21.1.6
    command: init --insecure --host=cockroachdb1
    depends_on:
      - cockroachdb1
    networks:
      - cockroachnet
    platform: linux/amd64

  # Order Service
  order-service:
    build: ./microservices/order-service
    ports:
      - "3001:3001"
    depends_on:
      - cockroachdb1
    networks:
      - cockroachnet

  # Inventory Service
  inventory-service:
    build: ./microservices/inventory-service
    ports:
      - "3002:3002"
    depends_on:
      - cockroachdb1
    networks:
      - cockroachnet

  # Payment Service
  payment-service:
    build: ./microservices/payment-service
    ports:
      - "3003:3003"
    depends_on:
      - cockroachdb1
    networks:
      - cockroachnet

  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      - ZOO_ENABLE_AUTH=yes
    ports:
      - "2181:2181"
    networks:
      - cockroachnet

  kafka1:
    image: bitnami/kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      # KAFKA_JMX_PORT: 9991
      # KAFKA_OPTS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.port=9991 -Dcom.sun.management.jmxremote.rmi.port=9991 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
      # KAFKA_MESSAGE_MAX_BYTES: 200000000  # 200 MB
      # KAFKA_REPLICA_FETCH_MAX_BYTES: 200000000  # 200 MB
    ports:
      - "9092:9092"
      # - "9991:9991"
    networks:
      - cockroachnet
    depends_on:
      - zookeeper

  kafka2:
    image: bitnami/kafka:latest
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      # KAFKA_JMX_PORT: 9992
      # KAFKA_OPTS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.port=9992 -Dcom.sun.management.jmxremote.rmi.port=9992 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
      # KAFKA_MESSAGE_MAX_BYTES: 200000000  # 200 MB
      # KAFKA_REPLICA_FETCH_MAX_BYTES: 200000000  # 200 MB
    ports:
      - "9093:9093"
      # - "9992:9992"
    networks:
      - cockroachnet
    depends_on:
      - zookeeper

  kafka3:
    image: bitnami/kafka:latest
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9094
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      # KAFKA_JMX_PORT: 9993
      # KAFKA_OPTS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.port=9993 -Dcom.sun.management.jmxremote.rmi.port=9993 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
      # KAFKA_MESSAGE_MAX_BYTES: 200000000  # 200 MB
      # KAFKA_REPLICA_FETCH_MAX_BYTES: 200000000  # 200 MB
    
    ports:
      - "9094:9094"
      # - "9993:9993"
    networks:
      - cockroachnet
    depends_on:
      - zookeeper

  # Redis Cluster Nodes
  redis-node1:
    image: redis:7.0
    command: ["redis-server", "--port", "6379", "--cluster-enabled", "yes", "--cluster-config-file", "nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    networks:
      - cockroachnet

  redis-node2:
    image: redis:7.0
    command: ["redis-server", "--port", "6380", "--cluster-enabled", "yes", "--cluster-config-file", "nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes"]
    ports:
      - "6380:6380"
    networks:
      - cockroachnet

  redis-node3:
    image: redis:7.0
    command: ["redis-server", "--port", "6381", "--cluster-enabled", "yes", "--cluster-config-file", "nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes"]
    ports:
      - "6381:6381"
    networks:
      - cockroachnet

  redis-node4:
    image: redis:7.0
    command: ["redis-server", "--port", "6382", "--cluster-enabled", "yes", "--cluster-config-file", "nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes"]
    ports:
      - "6382:6382"
    networks:
      - cockroachnet

  redis-node5:
    image: redis:7.0
    command: ["redis-server", "--port", "6383", "--cluster-enabled", "yes", "--cluster-config-file", "nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes"]
    ports:
      - "6383:6383"
    networks:
      - cockroachnet

  redis-node6:
    image: redis:7.0
    command: ["redis-server", "--port", "6384", "--cluster-enabled", "yes", "--cluster-config-file", "nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes"]
    ports:
      - "6384:6384"
    networks:
      - cockroachnet

  redis-init:
    image: redis:7.0
    depends_on:
      - redis-node1
      - redis-node2
      - redis-node3
      - redis-node4
      - redis-node5
      - redis-node6
    entrypoint:
      - /bin/sh
      - -c
      - |
        sleep 10
        redis-cli --cluster create \
          redis-node1:6379 redis-node2:6380 redis-node3:6381 \
          redis-node4:6382 redis-node5:6383 redis-node6:6384 \
          --cluster-replicas 1 --cluster-yes
    networks:
      - cockroachnet

  # Prometheus service
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
    networks:
      - cockroachnet

  # Grafana service
  grafana:
    image: grafana/grafana-oss:latest
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - '3000:3000'
    networks:
      - cockroachnet
    depends_on:
      - prometheus

networks:
  cockroachnet:
    driver: bridge